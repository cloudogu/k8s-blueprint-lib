---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: blueprints.k8s.cloudogu.com
  labels:
    app: ces
    app.kubernetes.io/name: k8s-blueprint-lib
spec:
  group: k8s.cloudogu.com
  names:
    kind: Blueprint
    listKind: BlueprintList
    plural: blueprints
    shortNames:
      - bp
    singular: blueprint
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Whether the resource is completed in the current state
          jsonPath: .status.conditions['Completed']['status']
          name: Completed
          type: boolean
        - description: Whether the resource is started as a dry run
          jsonPath: .spec.stopped
          name: Stopped
          type: boolean
        - description: The age of the resource
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v2
      schema:
        openAPIV3Schema:
          description: Blueprint is the Schema for the blueprints API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the desired state of the Blueprint.
              properties:
                allowDoguNamespaceSwitch:
                  description: |-
                    AllowDoguNamespaceSwitch lets the user switch the namespace of dogus in the blueprint mask
                    in comparison to the blueprint.
                  type: boolean
                blueprint:
                  description: Blueprint json with the desired state of the ecosystem.
                  properties:
                    components:
                      description: |-
                        Components contains a set of exact component versions which should be present or absent in the CES instance after which
                        this blueprint was applied.
                      items:
                        properties:
                          absent:
                            description: Absent defines if the component should be absent in the ecosystem. Defaults to false.
                            type: boolean
                          deployConfig:
                            description: DeployConfig defines a generic property map for the component configuration. This field is optional.
                            x-kubernetes-preserve-unknown-fields: true
                          name:
                            description: Name defines the name of the component including its distribution namespace, f. i. "k8s/k8s-dogu-operator". Must not be empty.
                            type: string
                          version:
                            description: |-
                              Version defines the version of the component that is to be installed. Must not be empty if the targetState is "present";
                              otherwise it is optional and is not going to be interpreted.
                            type: string
                        required:
                          - name
                          - version
                        type: object
                      type: array
                    config:
                      description: Config is used for ecosystem configuration to be applied.
                      properties:
                        dogus:
                          additionalProperties:
                            items:
                              description: ConfigEntry represents a single configuration entry that can be either regular or sensitive
                              properties:
                                absent:
                                  description: Absent indicates whether this key should be deleted (true) or set (false)
                                  type: boolean
                                key:
                                  description: Key is the configuration key name
                                  type: string
                                secretRef:
                                  description: |-
                                    SecretRef is used for sensitive configuration entries
                                    Mutually exclusive with Value
                                  properties:
                                    key:
                                      description: Key is the key within the secret
                                      type: string
                                    name:
                                      description: Name is the name of the secret in the same namespace
                                      type: string
                                  required:
                                    - key
                                    - name
                                  type: object
                                sensitive:
                                  description: Sensitive indicates whether this config is sensitive and should be stored securely (true) or not (false)
                                  type: boolean
                                value:
                                  description: |-
                                    Value is used for regular (non-sensitive) configuration entries
                                    Mutually exclusive with SecretRef
                                  type: string
                              required:
                                - key
                              type: object
                            type: array
                          description: Dogus contains Dogu specific configuration entries
                          type: object
                        global:
                          description: Global contains EcoSystem specific configuration entries
                          items:
                            description: ConfigEntry represents a single configuration entry that can be either regular or sensitive
                            properties:
                              absent:
                                description: Absent indicates whether this key should be deleted (true) or set (false)
                                type: boolean
                              key:
                                description: Key is the configuration key name
                                type: string
                              secretRef:
                                description: |-
                                  SecretRef is used for sensitive configuration entries
                                  Mutually exclusive with Value
                                properties:
                                  key:
                                    description: Key is the key within the secret
                                    type: string
                                  name:
                                    description: Name is the name of the secret in the same namespace
                                    type: string
                                required:
                                  - key
                                  - name
                                type: object
                              sensitive:
                                description: Sensitive indicates whether this config is sensitive and should be stored securely (true) or not (false)
                                type: boolean
                              value:
                                description: |-
                                  Value is used for regular (non-sensitive) configuration entries
                                  Mutually exclusive with SecretRef
                                type: string
                            required:
                              - key
                            type: object
                          type: array
                      type: object
                    dogus:
                      description: |-
                        Dogus contains a set of exact dogu versions which should be present or absent in the CES instance after which this
                        blueprint was applied. Optional.
                      items:
                        description: |-
                          Dogu defines a Dogu, its version, and the installation state in which it is supposed to be after a blueprint
                          was applied.
                        properties:
                          absent:
                            description: Absent defines if the dogu should be absent in the ecosystem. Defaults to false.
                            type: boolean
                          name:
                            description: Name defines the name of the dogu including its namespace, f. i. "official/nginx". Must not be empty.
                            type: string
                          platformConfig:
                            description: PlatformConfig defines infrastructure configuration around the dogu, such as reverse proxy config, volume size etc.
                            properties:
                              additionalMounts:
                                items:
                                  description: AdditionalMount is a description of what data should be mounted to a specific Dogu volume (already defined in dogu.json).
                                  properties:
                                    name:
                                      description: Name is the name of the data source.
                                      type: string
                                    sourceType:
                                      description: |-
                                        SourceType defines where the data is coming from.
                                        Valid options are:
                                          ConfigMap - data stored in a kubernetes ConfigMap.
                                          Secret - data stored in a kubernetes Secret.
                                      type: string
                                    subfolder:
                                      description: Subfolder defines a subfolder in which the data should be put within the volume.
                                      type: string
                                    volume:
                                      description: Volume is the name of the volume to which the data should be mounted. It is defined in the respective dogu.json.
                                      type: string
                                  required:
                                    - name
                                    - sourceType
                                    - volume
                                  type: object
                                type: array
                              resource:
                                properties:
                                  minVolumeSize:
                                    type: string
                                type: object
                              reverseProxy:
                                properties:
                                  additionalConfig:
                                    type: string
                                  maxBodySize:
                                    type: string
                                  rewriteTarget:
                                    type: string
                                type: object
                            type: object
                          version:
                            description: |-
                              Version defines the version of the dogu that is to be installed. Must not be empty if the targetState is "present";
                              otherwise it is optional and is not going to be interpreted.
                            type: string
                        required:
                          - name
                          - version
                        type: object
                      type: array
                  type: object
                blueprintMask:
                  description: BlueprintMask json can further restrict the desired state from the blueprint.
                  properties:
                    dogus:
                      description: Dogus contains a set of dogus with their versions which should be present or absent.
                      items:
                        description: |-
                          MaskDogu is used to override dogu versions and the Absent state.
                          You cannot add dogus which are not yet in the blueprint.
                        properties:
                          absent:
                            description: Absent defines if the dogu should be absent in the ecosystem. Defaults to false.
                            type: boolean
                          name:
                            description: Name defines the name of the dogu including its namespace, f. i. "official/nginx". Must not be empty.
                            type: string
                          version:
                            description: |-
                              Version defines the version of the dogu that is to be installed. Must not be empty if the targetState is "present";
                              otherwise it is optional and is not going to be interpreted.
                            type: string
                        required:
                          - name
                          - version
                        type: object
                      type: array
                  type: object
                ignoreComponentHealth:
                  description: IgnoreComponentHealth lets the user execute the blueprint even if components are unhealthy at the moment.
                  type: boolean
                ignoreDoguHealth:
                  description: IgnoreDoguHealth lets the user execute the blueprint even if dogus are unhealthy at the moment.
                  type: boolean
                stopped:
                  description: Stopped lets the user stop the blueprint execution. The blueprint will still check if all attributes are correct and avoid a result with a failure state.
                  type: boolean
              required:
                - blueprint
              type: object
            status:
              description: Status defines the observed state of the Blueprint.
              properties:
                conditions:
                  description: Conditions shows the current state of the blueprint
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}"
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          ---
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict is important.
                          The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                effectiveBlueprint:
                  description: EffectiveBlueprint is the blueprint after applying the blueprint mask.
                  properties:
                    components:
                      description: |-
                        Components contains a set of exact component versions which should be present or absent in the CES instance after which
                        this blueprint was applied.
                      items:
                        properties:
                          absent:
                            description: Absent defines if the component should be absent in the ecosystem. Defaults to false.
                            type: boolean
                          deployConfig:
                            description: DeployConfig defines a generic property map for the component configuration. This field is optional.
                            x-kubernetes-preserve-unknown-fields: true
                          name:
                            description: Name defines the name of the component including its distribution namespace, f. i. "k8s/k8s-dogu-operator". Must not be empty.
                            type: string
                          version:
                            description: |-
                              Version defines the version of the component that is to be installed. Must not be empty if the targetState is "present";
                              otherwise it is optional and is not going to be interpreted.
                            type: string
                        required:
                          - name
                          - version
                        type: object
                      type: array
                    config:
                      description: Config is used for ecosystem configuration to be applied.
                      properties:
                        dogus:
                          additionalProperties:
                            items:
                              description: ConfigEntry represents a single configuration entry that can be either regular or sensitive
                              properties:
                                absent:
                                  description: Absent indicates whether this key should be deleted (true) or set (false)
                                  type: boolean
                                key:
                                  description: Key is the configuration key name
                                  type: string
                                secretRef:
                                  description: |-
                                    SecretRef is used for sensitive configuration entries
                                    Mutually exclusive with Value
                                  properties:
                                    key:
                                      description: Key is the key within the secret
                                      type: string
                                    name:
                                      description: Name is the name of the secret in the same namespace
                                      type: string
                                  required:
                                    - key
                                    - name
                                  type: object
                                sensitive:
                                  description: Sensitive indicates whether this config is sensitive and should be stored securely (true) or not (false)
                                  type: boolean
                                value:
                                  description: |-
                                    Value is used for regular (non-sensitive) configuration entries
                                    Mutually exclusive with SecretRef
                                  type: string
                              required:
                                - key
                              type: object
                            type: array
                          description: Dogus contains Dogu specific configuration entries
                          type: object
                        global:
                          description: Global contains EcoSystem specific configuration entries
                          items:
                            description: ConfigEntry represents a single configuration entry that can be either regular or sensitive
                            properties:
                              absent:
                                description: Absent indicates whether this key should be deleted (true) or set (false)
                                type: boolean
                              key:
                                description: Key is the configuration key name
                                type: string
                              secretRef:
                                description: |-
                                  SecretRef is used for sensitive configuration entries
                                  Mutually exclusive with Value
                                properties:
                                  key:
                                    description: Key is the key within the secret
                                    type: string
                                  name:
                                    description: Name is the name of the secret in the same namespace
                                    type: string
                                required:
                                  - key
                                  - name
                                type: object
                              sensitive:
                                description: Sensitive indicates whether this config is sensitive and should be stored securely (true) or not (false)
                                type: boolean
                              value:
                                description: |-
                                  Value is used for regular (non-sensitive) configuration entries
                                  Mutually exclusive with SecretRef
                                type: string
                            required:
                              - key
                            type: object
                          type: array
                      type: object
                    dogus:
                      description: |-
                        Dogus contains a set of exact dogu versions which should be present or absent in the CES instance after which this
                        blueprint was applied. Optional.
                      items:
                        description: |-
                          Dogu defines a Dogu, its version, and the installation state in which it is supposed to be after a blueprint
                          was applied.
                        properties:
                          absent:
                            description: Absent defines if the dogu should be absent in the ecosystem. Defaults to false.
                            type: boolean
                          name:
                            description: Name defines the name of the dogu including its namespace, f. i. "official/nginx". Must not be empty.
                            type: string
                          platformConfig:
                            description: PlatformConfig defines infrastructure configuration around the dogu, such as reverse proxy config, volume size etc.
                            properties:
                              additionalMounts:
                                items:
                                  description: AdditionalMount is a description of what data should be mounted to a specific Dogu volume (already defined in dogu.json).
                                  properties:
                                    name:
                                      description: Name is the name of the data source.
                                      type: string
                                    sourceType:
                                      description: |-
                                        SourceType defines where the data is coming from.
                                        Valid options are:
                                          ConfigMap - data stored in a kubernetes ConfigMap.
                                          Secret - data stored in a kubernetes Secret.
                                      type: string
                                    subfolder:
                                      description: Subfolder defines a subfolder in which the data should be put within the volume.
                                      type: string
                                    volume:
                                      description: Volume is the name of the volume to which the data should be mounted. It is defined in the respective dogu.json.
                                      type: string
                                  required:
                                    - name
                                    - sourceType
                                    - volume
                                  type: object
                                type: array
                              resource:
                                properties:
                                  minVolumeSize:
                                    type: string
                                type: object
                              reverseProxy:
                                properties:
                                  additionalConfig:
                                    type: string
                                  maxBodySize:
                                    type: string
                                  rewriteTarget:
                                    type: string
                                type: object
                            type: object
                          version:
                            description: |-
                              Version defines the version of the dogu that is to be installed. Must not be empty if the targetState is "present";
                              otherwise it is optional and is not going to be interpreted.
                            type: string
                        required:
                          - name
                          - version
                        type: object
                      type: array
                  type: object
                stateDiff:
                  description: |-
                    StateDiff is the result of comparing the EffectiveBlueprint to the current cluster state.
                    It describes what operations need to be done to achieve the desired state of the blueprint.
                  properties:
                    componentDiffs:
                      additionalProperties:
                        description: |-
                          ComponentDiff is the comparison of a Component's desired state vs. its cluster state.
                          It contains the operation that needs to be done to achieve this desired state.
                        properties:
                          actual:
                            description: Actual contains the component's state in the current system.
                            properties:
                              absent:
                                description: Absent defines if the component should be absent in the ecosystem. Defaults to false.
                                type: boolean
                              deployConfig:
                                description: DeployConfig contains generic properties for the component.
                                x-kubernetes-preserve-unknown-fields: true
                              distributionNamespace:
                                description: |-
                                  Namespace is part of the address under which the component will be obtained. This namespace must NOT
                                  to be confused with the K8s cluster namespace.
                                type: string
                              version:
                                description: Version contains the component's version.
                                type: string
                            type: object
                          expected:
                            description: Expected contains the desired component's target state.
                            properties:
                              absent:
                                description: Absent defines if the component should be absent in the ecosystem. Defaults to false.
                                type: boolean
                              deployConfig:
                                description: DeployConfig contains generic properties for the component.
                                x-kubernetes-preserve-unknown-fields: true
                              distributionNamespace:
                                description: |-
                                  Namespace is part of the address under which the component will be obtained. This namespace must NOT
                                  to be confused with the K8s cluster namespace.
                                type: string
                              version:
                                description: Version contains the component's version.
                                type: string
                            type: object
                          neededActions:
                            description: NeededActions contains the necessary actions to apply the wanted state for this component.
                            items:
                              description: |-
                                ComponentAction is the action that needs to be done for a component
                                to achieve the desired state in the cluster.
                              type: string
                            type: array
                        required:
                          - actual
                          - expected
                          - neededActions
                        type: object
                      description: ComponentDiffs maps simple component names to the determined diff.
                      type: object
                    doguConfigDiffs:
                      additionalProperties:
                        description: ConfigDiff is a list of differences between Config in the Blueprint and the cluster state
                        items:
                          description: ConfigEntryDiff contains the difference and the needed actions for a single config key
                          properties:
                            actual:
                              description: ConfigValueState represents either the actual or expected state of a config key
                              properties:
                                exists:
                                  type: boolean
                                value:
                                  type: string
                              required:
                                - exists
                              type: object
                            expected:
                              description: ConfigValueState represents either the actual or expected state of a config key
                              properties:
                                exists:
                                  type: boolean
                                value:
                                  type: string
                              required:
                                - exists
                              type: object
                            key:
                              type: string
                            neededAction:
                              type: string
                          required:
                            - actual
                            - expected
                            - key
                            - neededAction
                          type: object
                        type: array
                      description: DoguConfigDiffs maps simple dogu names to the determined config diff.
                      type: object
                    doguDiffs:
                      additionalProperties:
                        description: |-
                          DoguDiff is the comparison of a Dogu's desired state vs. its cluster state.
                          It contains the operation that needs to be done to achieve this desired state.
                        properties:
                          actual:
                            description: DoguDiffState is either the actual or desired state of a dogu in the cluster.
                            properties:
                              absent:
                                type: boolean
                              additionalMounts:
                                items:
                                  description: AdditionalMount is a description of what data should be mounted to a specific Dogu volume (already defined in dogu.json).
                                  properties:
                                    name:
                                      description: Name is the name of the data source.
                                      type: string
                                    sourceType:
                                      description: |-
                                        SourceType defines where the data is coming from.
                                        Valid options are:
                                          ConfigMap - data stored in a kubernetes ConfigMap.
                                          Secret - data stored in a kubernetes Secret.
                                      type: string
                                    subfolder:
                                      description: Subfolder defines a subfolder in which the data should be put within the volume.
                                      type: string
                                    volume:
                                      description: Volume is the name of the volume to which the data should be mounted. It is defined in the respective dogu.json.
                                      type: string
                                  required:
                                    - name
                                    - sourceType
                                    - volume
                                  type: object
                                type: array
                              namespace:
                                type: string
                              resourceConfig:
                                properties:
                                  minVolumeSize:
                                    type: string
                                type: object
                              reverseProxyConfig:
                                properties:
                                  additionalConfig:
                                    type: string
                                  maxBodySize:
                                    type: string
                                  rewriteTarget:
                                    type: string
                                type: object
                              version:
                                type: string
                            type: object
                          expected:
                            description: DoguDiffState is either the actual or desired state of a dogu in the cluster.
                            properties:
                              absent:
                                type: boolean
                              additionalMounts:
                                items:
                                  description: AdditionalMount is a description of what data should be mounted to a specific Dogu volume (already defined in dogu.json).
                                  properties:
                                    name:
                                      description: Name is the name of the data source.
                                      type: string
                                    sourceType:
                                      description: |-
                                        SourceType defines where the data is coming from.
                                        Valid options are:
                                          ConfigMap - data stored in a kubernetes ConfigMap.
                                          Secret - data stored in a kubernetes Secret.
                                      type: string
                                    subfolder:
                                      description: Subfolder defines a subfolder in which the data should be put within the volume.
                                      type: string
                                    volume:
                                      description: Volume is the name of the volume to which the data should be mounted. It is defined in the respective dogu.json.
                                      type: string
                                  required:
                                    - name
                                    - sourceType
                                    - volume
                                  type: object
                                type: array
                              namespace:
                                type: string
                              resourceConfig:
                                properties:
                                  minVolumeSize:
                                    type: string
                                type: object
                              reverseProxyConfig:
                                properties:
                                  additionalConfig:
                                    type: string
                                  maxBodySize:
                                    type: string
                                  rewriteTarget:
                                    type: string
                                type: object
                              version:
                                type: string
                            type: object
                          neededActions:
                            items:
                              description: |-
                                DoguAction is the action that needs to be done for a dogu
                                to achieve the desired state in the cluster.
                              type: string
                            type: array
                        required:
                          - actual
                          - expected
                          - neededActions
                        type: object
                      description: DoguDiffs maps simple dogu names to the determined diff.
                      type: object
                    globalConfigDiff:
                      description: GlobalConfigDiff is the difference between the GlobalConfig in the Blueprint and the cluster state.
                      items:
                        description: ConfigEntryDiff contains the difference and the needed actions for a single config key
                        properties:
                          actual:
                            description: ConfigValueState represents either the actual or expected state of a config key
                            properties:
                              exists:
                                type: boolean
                              value:
                                type: string
                            required:
                              - exists
                            type: object
                          expected:
                            description: ConfigValueState represents either the actual or expected state of a config key
                            properties:
                              exists:
                                type: boolean
                              value:
                                type: string
                            required:
                              - exists
                            type: object
                          key:
                            type: string
                          neededAction:
                            type: string
                        required:
                          - actual
                          - expected
                          - key
                          - neededAction
                        type: object
                      type: array
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
